package dilithium

import (
	"encoding/hex"
	"github.com/theQRL/go-qrllib/common"
	"reflect"
	"testing"
)

const (
	PK1     = "da218daf9d5457bee0e2381250f7ad3159e8a243fbf90e02c2802e1722cee9547469d9bd5f7f324e5829e468b8fe75296b728811cdd526d429218f94118be8fbffcee80e70a54040afbc8e247f888ca4d7805930b051186607be4664f4a8c2b3506d15beba4f7a978e94cc151e4405e770064bcd4ab754507905f2c4193018b09abbff18894c218d678a962ecc721cea188214cad4ea77d40ad479e80bcd1b1b31ed6be30fea30c8b5177bb274f70583c7150b744b4732662c0f77623b9a5d567293ae0937eeb81049ba0eca74b95448cbe47ce5c960caaecac206fb3e93631fe793407f679d9a638de2c4f3fcd11f2ac5405b92cdfc002cd4260fa5f173edc3fec24144e1bb973fe51409cad0b43de1ea0f84c1e86061f61bbd1d3d6773b48e33d04c3128fe8dd9d8fdba8e9fa6cb9c48c000a0c83ca31f0da233935e706487a8cf8d2bc32c2131a10dc10cea6579f57a2d6515e95f8e5a4866db73c501dc31c06b81c21d56debe4d4715e969f15458979629ad3abf2acbd4d02cb7eba6f84de0651b39dd9d2bae229a9b4fee898403962907045e43ffe35fcc89de72e9aef8acb2e9c87f8e9d03744255a47733a356651112cc782e70db29ae67068e1b3c922a2448831677e54a180c225d2bedd1d6388a2f5456b6eb03de1d6404f9e37d29e9b0df2894b7c21e3f812fc286a750fcf20c26a6b007fdd6136f947a4f9c18573da567e224642fcce09f0536443dce0533393bce83a881ec6e8a0f7321875492ee10bff571367b6ce4eb232721d28661b8c352e5a0b68da635b11fc65326ca492d520ae6031a8578f86b93d16c0d1c75b9c707eb61c8b9ae7fff8d289de8efa269fb181d2298a4fd910b4ee5bb3590e18649ae7884dd1d8cdd263961b0d3d2bde023c9a859988426357a24e0995c260f859e14467896ad25f1ac1c19b24d13bf3d79c8ace6e5becc38d8b8eaf931b6b01a4297b9ac136503de94ee2bdcd2a657598e903f6bc1a439d938bc8a04636efc67db0e1924bc7118fd9278729f44e9d1190c7c40e064a3e8a38d5f3cfd195c02a81ade38d52b5f9cbc1f044d037195b2c621c147a4ed59709e69d55a9687c8f502b233048e0668a9de94f37a6fd4eca1d7b670c332b3f33ccfe2b52c4d6773745d71265ce3d1076453af1527e700428f74b1168f85fb2d003d0491c680823a14f1585e42212466a6d20e4901beaec212e26ef6a2d1cb6703b761b5761b0ebfdb27abf222c75d5ecc712b9c230290fbfa1ae2cafbdf4d153a938460e174def122ca08c52aa76a4ac523fabb2622a81657188ecece6f3efbef99f6c6930a6bf29f5e5d842208a46f98c8766121017ae1df2a6715f88cd52c447104a299af9eae731e93ec6003a04418384d2ed0ecaf2483c22a898382a0e7440055cbaff8c081fc4eb03d1c37e56cb81e673f48bbb50b32ea61ce3f228f3c4f8c80e556dc04d88533ac2d6a4e02908046e3b37cbcdd59f5defd5f856f2f0cd22455308e3e1aa8b75e47f701fa3b21a66fc4d0554df3002ee7b874e38e5893ec48edbd3936239d7a8500f090f662845dd1dfe06fab8a8f21c42e7da370a2bbebef1d7fd3f6ee4aab5a6d3fdb1cccd3c6eb3e0b2bb878ebebf495131c3a5f4758c50d982d9e6363873c2c9a5e305b1b9ea550a3a3d978971e4c07b25d2634aaf3e556cf4fa9a2527dfc86c5def18cb267a48fef1e91aaf49ecf32e2f86f0b89336049946029e4bd02e6b0e3c6ec908f7d1e1182b38aa44e321f5444ae278e67556fcc5042772667df7d4b2928b32f94a9e14b06a09d2686b3fbd29dc4affe89a8617386a1d1371cf7e1d684214bcaaf138d05677bd14f8b12ffa765598b30361a30e6e9b666e5de2ba0e4a11391ee47987c30ff03df06101901a923b9afb33156b8838ea1be8d26eaf8aedea6e82f12f882141539670fd30cebd79e7f34ab630f1886d54cd4b3bde1d5983c74f16ab2d55f80d43d57acce417c879b1aab49f194d61de4c445e8e5f59cdc373cafa00a995a02e4578537f1b9ee48c5560f89c3fa8f523e7b1adf0c285bef1aabf073029225fe46acb1fe7260"
	SK1     = "da218daf9d5457bee0e2381250f7ad3159e8a243fbf90e02c2802e1722cee9544d3b373493a2ae24785728bda35fdf20e73deb70893af28dd3ba07fb742b732b7cc5e02a18288f50cc1d2297290a82f6675005e1769c7728f25d1e2c5eb714f1ec1c1034c5153727d6fd807c55d430286598361242766637134747804527a8aa4a72506237333973a09557596450a639a9368688a2460899381532154a47a4a86a18850922642353807734539700529964a555027487a8595a1892435019a00646664a6807872231905040075a255814082538332555666603242a5649013a900aa7085539422a3741439654074123a738a477604564914350356117a60865267a8799409a008746915261112038789a8864454785aa0974873963817a04a9257a020521749a756651172038610a0016377a8056701462a11788641a0384433849442914240200015334769755408628673702421a38a788a47513077026141a0697a1a4624859966572210954963412024938aa23982011890983833377521628a41172791384656813536a07233521527670104685297563473733419863676153060367479350034614235935380073750804856399a172123a0747546aa67381883930141a93750324313513671a61585aa001525904162810421955840aa57a47a13714a25a4172a68a6337947a78391212521641657347a36377445372239252aa5978764352846500470a242a390a40712a17a8043aa6a515540078519939a6048454312637260992a89a792484701903463990a47161849a0a08556931772498962903103959270aa7666236611870a1314337a327535a4a3315a925429790a1459a626573597563a14a37736566333a60708796a47035952933213499257842973452517a1003088341253318498621804a0a4930a94365167628753a16477270953841a67688402719243224250666156a8587a40642a47211301a78562100083547991a460580066995326803196858172551962a911158aa65928a9632791156042a792375976881a01055382052a1063a5456140aa5049662772710692694007043873504370385815a783443a5137557311630981016273546906709a40768922216100a7484574a811148a0a5111a29931527650138741aaaa4378035881020904770154966244a05382642225315680679a556a77140541186a008640170a22a558526485a2263a65204563096746a1579326496379a676225353a6860149497978200112a679545725282a10223601839477441a0a64672156aa92265739812367867a5676517332a73a29a22a7075114980682697953041a78a67003a569821a53823976677518a9a5556aa639503139443797198406526404110604510866273851036500219a44170818508a326557aa753933121731964975740a3737976054a977274251965a485305747a268958536328323700156a0a649427396a2a36570a03052625472933981610752294230997547114783799100a61a334672620020303790272a5377812879a54663780315920907980612791696a487992a021409022822581818aa534362946379a31256791a9a57749a0a2659611673675616252398732601886911709322150909962682153856176169907783159a01723290874a346a3629751997990109896890812617623616532291967865578745078946106818a210629943891020949533489216a74375477891a494137346409707308926a330a1b618dc677bdf54df30d87d5d1429652cbb523c1abb04a440dceb6d744aa80a4e4ce07b9e4fd2eaca229bbd7b09789da1f2504e99e646c64affb540c5758b36e235bf96af78f700dac1d5b8c0704c3a9046349abda44cf6f3c5f52b63d176a3f2e1fee89329c4ff3517e8228f5b345354cf752191f43cf03d4dd8af405631747690f4e419821f4e6ecdb53851472148553ee93c004239e7d9105bacd2434c6bab46f3df32f5aba232a8a7bd10ace477758c942a734f7fec6cfc8c4717b140569be1d1e7d7de8d49073770506f5141719675c419554983f4cfc9811e4892b3e8336444568e2c701fc3e39080d204ddf42fd75719b5c51c9cdd768df414c77222b1b2d0cbdf38e0c893a372376d7ce541f791c383f00ec7fa77a060ce1aa4d37b110cd6100dbb841f91d4a511618133d397c589eddfb6da2bffab676fee1f2a11d2213d12ac47721675ff7f394ba363b7336cee09e2e2069d00cffb6bd29341eee8b31aa570fec054070c0a1ac06dfb7d95ca1e1307058094daee6ec591372966329c0653ab3edc554dea6320092eb1e66d65ae11b7621236e0d8bba044e9a8f0e443124d1e429ca511594c76f9666e99ef62c3abee9a5c106b44c96a623faba4284c85e5ef26ebd4deff10bf77b962f3f98b00380862f51679d042d43c2604627ffedaf50284d946c2a6973f302abe285864b99f62291a95c07965ed723345200726a928d140574396a64f8ae7c51a700262a3552e42863ad501c1b61fe2a8f67be6a1d2f66cc44a1c81e3fdcd4fb0dbfb32ac9244ac3eefea21dcfa322a0fb8d70d3366765c18d7d9e3b3f3501d964bc7bacccccdbd8d1f49fb07f59c6eff0b579489e23b4022dee07a1ab796385bfae046970212cb6198e3775d318af9c24aaf7fdd37ad9e9186e5cccf2d438baead5608f36c69d930b62e85a8fbb2611edde4a1ec5eff0a99afca2084e52a290409fe54cbfc1dd365a8cdef8d53f8b3e78ea94d35784d70cf00c43fa00f147e3ae90cd52b795fe326c39903e206e633d93f8fe57ed6f6d6ee2c29f3a03f105cc49c635ccd3913ceb8f1822effc8474633a85e2b51a08fd53bdfee12739534eb25e2e1c2e45f5aa7db81ed9faf01952a1990567c4cc26b32e754bcd0fb224c592980bad6287857e2442f9deabd9bf87758158431fb17b85524deb644e1d287220f555bcb1f36094cd1b0b2bbdc0825316e1c992fc690497139b35e8388f7b0fe5ec2b9bc4078928f2468fbe4f85c029750c291be69028104d06be54eead637636a27972e25fa65b53dceead4d4f43d660587d9b023e825c00e5452ccf68979173ab8af392fbbb7132a7ef9a94a249087f732761659c44c8be05744546779ddd609abba7e86cb8c15910d88d07edfb17914879c07234a82ab212bf4db0978db8d3305f26337f8580cbd4bc8a733cc953393861d899259a71447f5d2c10964a0f648fd75690e6d4e5ee9b6a98e17bc912f192cda0633f79c34ceb47fc070da1dc4b9db865dabd34e2545dcb783320e9f8f22713822ac9591033a6a2900680f7b90cc393a2b3d6ae95bf959115080fad4a6e139652736066ffca7b788e378abe4674b879c39b9149a05955281c96031af9d4ea8d7c65e348f7deb762a85f21832a3739c70bbc2b5184cd67bbc53671933c0e6728f7d0bd5ccedcb01fc76d7b426624775fa72e9891ed1fe50822bb5d17ce7fa20e564f751eec8dbd970913f8436efea867c17787148e86c2061335356e68719807e11d5db65da65c0510c94478863ebfe8999fc45241aaa68ab5e8e801376b9d13ef2930340e9dacc09e9e68a56ba30fac3b395d7a726f4302169069e283fb56bfb0be2d01a4b45291acf7dfc7400d8a44fe88a9f7a44a8743d4cb4c4a10d865a29aec1d8757d41eeb4820ac260f0c8c7f80cbb7412acb163b2b9e2e53be11ad105cececb2fa7e72474bd98b9cbbce176b07254ab1f006db578d20875e820f316521d03fa7bf23054e8a21904487d45760da4d7bf2e80da4b67d306a764b4f7a7ff738cc027e9341fbda436e877fd91a38df9b38dcf796c3b79bab000ea9a39ed664c7795c43f3ecb4da0640004b60e9dd63646bc28393dc4ba94201d07b36b7fdeac044f6c420ff95810946b3f248d0d7b30a10bcb3e6af5abc4d84c4a7109f95b3a57052b1df1a65df85821b0fffd237fe4c3413cea0d4f60b1c2a771c60ae1b77ccffbff99300cd47468a47f4ff56faf41d45f08afd796ec81f46334491e19a54802cddb5080fa5255794e36ba31b11581408d6bb9622236c2099d5e385d3d3359ac6826d55c12ddc2b2292f3b95cc8e33d9a04968f077b201bd62ecc0a46c78f5e4829c3219a0cf25ff6648d0f6f33979ed4797a85a73a94563bb2d0f2dfd0abe7ab4c3323a979cbda64479e548a128dea4818a651d9d309362506adab21589c6a3a6a43d5f9c96aaa867f29067afe8ad5d03e7953294c9df2d043f95e6e36509012e42cb3e41f4ccfa2d49187395bd03d69967ccfccd7dcd32a76779171c336088f9810b673b0555846fd256886341193d95f1981c170a31c15be1027e2706a056f4aecae0e286e7faf0432cb6c7e5eeb525dc3c884d309210f5209797701c6340bef91c217e3ef0bd91a365da1ec8ed22fe712087e46dfb71d8b05d907704202c0bbcea65d6de057ea53345224d3f7515a68ea7f52f0f965aac5ac175d91ab7edefafb98ee567999cb7f608cee089ab00e83a867f6d1422190a2fb9536acb29d1f7aeadb345001a7ccae85d74083e5131214b462f7c7be2c0323d5b425b8789da0a6a269e86d1beba59dfed5674eb9450d1097aa47b1dc2d568a2451cd938a8303c6d5e5d9ea80bd086bbababf39a0dbd3a438e38e7ee3dd91252fc75d1d05da6766140fd8a53983e7847b05751331fa0baad7a6aa5fd206eab59cff1aef177f3b38e4fb964ab423a1213900fbb278f88e6b61aba19175ca440117695f0bf748208d0460d5f9fba9d6047900352e2fe2ff51b41fbb5a6a893810c81316850de97c1f929861eb474c6757fe7528f81a6957330a4dfdcb55d2aaa4020541d064190796992311f09c83e8a3b8e01c8110f262ac6592d59ff59b5a73d1448f85bbacc19cd26cb5c064f623cefdb1af02e7bc633bb94d7375c078b761dc0ccef2"
	HexSeed = "f29f58aff0b00de2844f7e20bd9eeaacc379150043beeb328335817512b29fbb7184da84a092f842b2a06d72a24a5d28"
	Address = "200a82f6675005e1769c7728f25d1e2c5eb714f1"
)

func PKHStrToBin(pkHStr string) [PKSizePacked]uint8 {
	if len(pkHStr) != 2*PKSizePacked {
		panic("Invalid pkHStr")
	}
	var pk [PKSizePacked]uint8
	pkDecode, _ := hex.DecodeString(pkHStr)

	for i := 0; i < len(pkDecode); i++ {
		pk[i] = pkDecode[i]
	}
	return pk
}

func SKHStrToBin(skHStr string) [SKSizePacked]uint8 {
	if len(skHStr) != 2*SKSizePacked {
		panic("Invalid skHStr")
	}
	var sk [SKSizePacked]uint8
	skDecode, _ := hex.DecodeString(skHStr)

	for i := 0; i < len(skDecode); i++ {
		sk[i] = skDecode[i]
	}
	return sk
}

func TestNew(t *testing.T) {
	defer func() {
		if err := recover(); err != nil {
			t.Error("Panic while creating dilithium ", err)
		}
	}()
	New()
}

func TestNewDilithiumFromSeed(t *testing.T) {
	defer func() {
		if err := recover(); err != nil {
			t.Error("Panic while creating dilithium ", err)
		}
	}()

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	pk := d.GetPK()
	sk := d.GetSK()
	strPK := hex.EncodeToString(pk[:])
	strSK := hex.EncodeToString(sk[:])

	if PK1 != strPK {
		t.Errorf("pk mismatch\nExpected: %s\nFound: %s", PK1, strPK)
	}

	if SK1 != strSK {
		t.Errorf("sk mismatch\nExpected: %s\nFound: %s", SK1, strSK)
	}

	if "0x"+HexSeed != d.GetHexSeed() {
		t.Errorf("hexseed mismatch\nExpected: %s\nFound: %s", HexSeed, d.GetHexSeed())
	}
}

func TestDilithium_GetPK(t *testing.T) {
	pk := PKHStrToBin(PK1)

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	if !reflect.DeepEqual(pk, d.GetPK()) {
		t.Error("PK Mismatch")
	}
}

func TestDilithium_GetSK(t *testing.T) {
	sk := SKHStrToBin(SK1)

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	if !reflect.DeepEqual(sk, d.GetSK()) {
		t.Error("SK Mismatch")
	}
}

func TestDilithium_GetSeed(t *testing.T) {
	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	if !reflect.DeepEqual(binSeed, d.GetSeed()) {
		t.Error("Seed Mismatch")
	}
}

func TestDilithium_GetHexSeed(t *testing.T) {
	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	if "0x"+HexSeed != d.GetHexSeed() {
		t.Error("HexSeed Mismatch")
	}
}

func TestDilithium_GetAddress(t *testing.T) {
	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	binAddress := d.GetAddress()
	address := hex.EncodeToString(binAddress[:])
	if Address != address {
		t.Errorf("Address Mismatch\nExpected: %s\nFound: %s", Address, address)
	}
}

func TestDilithium_Seal(t *testing.T) {
	msg := []uint8{0, 1, 2, 4, 6, 9, 1}

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	signatureMessage := d.Seal(msg)
	strSignatureMessage := hex.EncodeToString(signatureMessage)

	expectedSigMsg := "b57514d3f7acf4c3b8db0d8df4cda335169c514a39e844bb2b2ec3303bae53bc5737cb1387a27053f04b826079f0106f51ec5cd1b7e9430103b0a1c0626b11f6a68d30611ee05192a00a09f28d1835e4d4c7a4bea8042cdbd39ae9c48a7ef2560eb5e108a9b2a3ee03150a03637984b5d6254a9810f226777d099247c1b9ba35a2b64a57447d111fa70cf0b92912f92ed4b0149fa7063dbbacb588ae53f22f280a373dde446ed51064b2fdecc2787e80a19f10e266c63a03ee35708ef091ba301fc40164c8221e5c2a89469e6d5e299742761c3dbac8dbe782e6c183e86f1672ac9b5c85b7f4443221f060c04c397e56efb0e17a1157bb6855766d8390871c8cbb9443245b80b8ec829aa1a1c01c5c09a14f4dbc93666fb612c3e9aac68734eec80849b5000d48fb33d8c310ad45ed68d65e8cd5099e99c921e4d1dda26d419ab90dc7b1af3f99c899433a10344890a02ce87a604e6ed7b88ee4231cbc762de85183c74afd35cc2b5f8a362a95a4afde497fe111d6b37048965512cf82a4dbae79a528c7060aa54a82c5c44f033e60bab973857338b84bf066576bb28aa4e4a90d5c12ad333e3cbf66daccb9d39d682a90c393324fdf0f712fea797763f0ca344a7c13f3386040e4c96c611773f685a641c2a330e89d2f5ff638b9899f9546ae49f6c472e0451b261d00dce9e30ff6bfd61bebd4e445306e5b5018f8f68857e41f2fe18118d843095af5e44c317b0131125d05c80d349b6928542d6c12d6adac2f11c40d07bdc2fc103d054cf30e09b52e9b220d526b2815dd54944e748a8e915d1eed798244f8efccdbd7db5410fb39cb18818bded6bb7f4c47fa477f7790d84429d1f8552a1ebd44c8d9140351ff33aca06c8367ef79ea5d0ed3fc7b46fe78540fea61aed4b4af4839fafcd02f0205a1a0a0e45322ad29b88d531f5be457215d9fa770dada54d9ed58a220dcd6aa18c6a3dd02e27d1e3d5ec573f50607fd830aaab9994fdf80728c6d605adf3c3b1185000ec7d01bcb86c2f1af6cb71e27b7ec481e2e607130d78c34f9bfacbdaa4da086169150fd50ded8a1af91b38fe52afac1f59baa522ac3f4066dd79bca4063dc266f81622dba159d828738fa66a2ba9323ac7f2ad897802ff576e4962ec132b3140243dc33012a5d57ac2f0d1b6e2c8549174ad5e8827f9b88461b43b78b39e9d820745ddf26e6bd461faa5def76ec4518637953a7a32f7a374f516066766734be6b7007f9a0b247512af2a209b6336f359f76d4e46763fc16c61ee70b9c591c39957c7d64cdd39b0d578deeffe89b5784eff3054547aa7163ce48cbda9356822d8b73d41b3c97a7e39a8e83baea2709a5411180a1dfd430e3e7da19e6ec985097401d1e584cade644cfd5841450941e47882cb9a3f5f8d7ffb56b264b52f1150ed606e11faa38d2099a279334225e3e674748a31275c61ba2f426890a5d3688af1bf7ca428a98e4ac45e83519e9ebd1bd5a404ce328d241219694fbea7ceb83804572069324674463130a8cd57065a9ad5b94a02263c63a414b65ad7b2f0c0308b2445184d4cb5cad0113c2d5b243ac52af6cd318dcf3428e6246075d62114fcbc58c508535b83f98e0f4d8e971091562e2d2522ca4f02054fb35945f8c4c6eb6badc1eb59109b63919cad515302a07b32be9e18a9a8fb6e293dd847471de4a1c0296557045bc9cb46b3f7a547bdba3428b363c7059f6df4701c85bd42f81671b279d5aad5fd26c296f0005be5b9a3db7ccb57218a9148bd33f035d06ca83a965bc96308b49084da1b4bbf0c2c191211a4f3fedd8f99f4159672af4e0373470d795f4b0f59a601f0f5e378fa6d66f06c26c1216573316d333ebdf824246a9d5d14df10df3561008fe9c3f4306053a46f8e5a3c7ed163395d2f275ca519e28f783959a761114e852395f47a58e6639df3fe7bbdff459a0ac7cc8b2f8bbd7d1aa6e587a93309a57b3965ce744c92b9af337e727f143cad50d978fbca836a533f8179f365fae9e72380f39b852f578841b6786cd2715f4b57059fc6dbf4320bc3ca951216f4ae035dde36d5ad003c5d525382b8ae987c8df64f7bc06a5092737627b661a2c48a99dbb8e8b10616ea6e39409fcb6fe2fc5a5d9304264dbdf9598f19472e858bb3c1fe93cb67ef3cf2e9880004017d1843b122709c6b632b30c26c2379a137fbaf8a2cf88b6b6ac5c2b7f3f72d16c05b9b21b3012f860ae19976d5032e718b703cd003cebc3a5449fa63593397cd2e613434e9c3130a227fb4ad5378504c62af39adc5df859436d6cb791c85ba4386dd79d0c04519d5055d56ce6b2b4efa23951c2b600c750e52a3b6f9f694e3aa48667f9209888fd841d0c8ed2d50480dfdb8505a4c4cc0c0d7fffaf32aba110900e8be06cd37fac16fdc4a871a1f9570f8ecafc1901698022c5bb22f540191966cd2c1863f8ffa918871289a7723b7156958a832a2777d35ce41f6dc3b3a55a2d4647917e2f80ff1990dbfe500c636db835d4b6287afd2a8599d4ecfda7697f37191d27fd0d68eaacaab8b55b4550efde672c7a494611daf494f57c54272364c75623315cca4a18e3688ed63a6cb47b16cf5aab4ed07174d0c3c6794a8f528a54f8265e20c4aa5afe1417f7120c5c64a83d620715449ab4874deb51137c4731a00d4c7548dee055beec761c6819eb104fb48847215ff937d247924956a3ac302462590fb7ed395b36be5541a970c358949682316133a830c627d1e0cff5c0f36018e51e3492a0d64ae8555736f282e2e8d699d7f9ac79c373519e6417e7ed6937c6bc1023580e9b53725552111c4c42ef3cc944e4ea4a869e30367b34e632a7fc8a76b75c3924e604c41d1b706fc00733ddf8843dcbbb30c168b6d910f988932ee7ba95e4e69a51b056260e5322a136e8f3eef8427562b9ca11cc47dfe411a6a7cfed4fabf70cc95925174ef9fcd0be57afbb95faceb752bf67ef375545acab5e43376fcc1c61902b6797032ded8efc94567e6559e839753442a87bffe3a0ae3fd1a6ac32f509a8a4f5a3156e1423056fedf717bc9d78d71a6a4009dc5907c58bd62ccd3bd6252f8ec1c2a27fb3a7f6a196b2c546d2806b1951eb6b2fc9f09c7ba2ba5e878d522efe3381e6b4a942f5dc009c1bfd19b37ca6abce414c95193069c294a4cb21d1867f13e7615377423fad747408b10488d9827c75507545ee8382a9887d8a57b032f01c64d3ffe1f925294079c032b7823a980867eecde708ea5693d7c6e45b09c9191cc9e8426cefc8f3d60ab875a4a83903ba5ff58ed66a4dfe8b889ea233b41e7d8ffe53f3ca966e2ade1a2d3fb4ed25dfcd21320b3f54f5c2902daaa2a91e61bd069370dfadd3355c437d54e23cf683596baf232639e9a5fd3a7a0ebc3a95b6a8fad52badc0db63ea3217440b630b7baa093ae890bd3365c670d43b2b75225cf1011591ec99ca648c0e2d5184d2ebbec5f9ec6bcfaa760cb435a3dd25d0462aea2860d4e0d63c03d19065acc327ebd20b3ebac869f517cb6cc33067dbcefae965df86d284ee634e231475b05ababbfea1570d7c24802b1a7fcf225997b1683a4528e582c06222a20f63436f0a33d2815ff78822e50a1630333549677a83adb5c4d1d7e7f9fe0b223848687cceec181b26788c9ba2a9aaee184b555a5d60648297abbbc1cdced6f905585a5c5e5f6175a2b5dde2f0f2fc0000000000000000000000000000000000000000000000000000000000001119233342b02e330d200438ac6400095020304080109440001110e012008602c0020458802e2bb4fd062c950c00010204060901"

	if expectedSigMsg != strSignatureMessage {
		t.Errorf("signatureMessage mismatch\nExpected: %s\nFound: %s", expectedSigMsg, strSignatureMessage)
	}
}

func TestDilithium_Open(t *testing.T) {
	pk := PKHStrToBin(PK1)
	msg := []uint8{0, 1, 2, 4, 6, 9, 1}

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	signatureMessage := d.Seal(msg)
	strSignatureMessage := hex.EncodeToString(signatureMessage)

	expectedSigMsg := "b57514d3f7acf4c3b8db0d8df4cda335169c514a39e844bb2b2ec3303bae53bc5737cb1387a27053f04b826079f0106f51ec5cd1b7e9430103b0a1c0626b11f6a68d30611ee05192a00a09f28d1835e4d4c7a4bea8042cdbd39ae9c48a7ef2560eb5e108a9b2a3ee03150a03637984b5d6254a9810f226777d099247c1b9ba35a2b64a57447d111fa70cf0b92912f92ed4b0149fa7063dbbacb588ae53f22f280a373dde446ed51064b2fdecc2787e80a19f10e266c63a03ee35708ef091ba301fc40164c8221e5c2a89469e6d5e299742761c3dbac8dbe782e6c183e86f1672ac9b5c85b7f4443221f060c04c397e56efb0e17a1157bb6855766d8390871c8cbb9443245b80b8ec829aa1a1c01c5c09a14f4dbc93666fb612c3e9aac68734eec80849b5000d48fb33d8c310ad45ed68d65e8cd5099e99c921e4d1dda26d419ab90dc7b1af3f99c899433a10344890a02ce87a604e6ed7b88ee4231cbc762de85183c74afd35cc2b5f8a362a95a4afde497fe111d6b37048965512cf82a4dbae79a528c7060aa54a82c5c44f033e60bab973857338b84bf066576bb28aa4e4a90d5c12ad333e3cbf66daccb9d39d682a90c393324fdf0f712fea797763f0ca344a7c13f3386040e4c96c611773f685a641c2a330e89d2f5ff638b9899f9546ae49f6c472e0451b261d00dce9e30ff6bfd61bebd4e445306e5b5018f8f68857e41f2fe18118d843095af5e44c317b0131125d05c80d349b6928542d6c12d6adac2f11c40d07bdc2fc103d054cf30e09b52e9b220d526b2815dd54944e748a8e915d1eed798244f8efccdbd7db5410fb39cb18818bded6bb7f4c47fa477f7790d84429d1f8552a1ebd44c8d9140351ff33aca06c8367ef79ea5d0ed3fc7b46fe78540fea61aed4b4af4839fafcd02f0205a1a0a0e45322ad29b88d531f5be457215d9fa770dada54d9ed58a220dcd6aa18c6a3dd02e27d1e3d5ec573f50607fd830aaab9994fdf80728c6d605adf3c3b1185000ec7d01bcb86c2f1af6cb71e27b7ec481e2e607130d78c34f9bfacbdaa4da086169150fd50ded8a1af91b38fe52afac1f59baa522ac3f4066dd79bca4063dc266f81622dba159d828738fa66a2ba9323ac7f2ad897802ff576e4962ec132b3140243dc33012a5d57ac2f0d1b6e2c8549174ad5e8827f9b88461b43b78b39e9d820745ddf26e6bd461faa5def76ec4518637953a7a32f7a374f516066766734be6b7007f9a0b247512af2a209b6336f359f76d4e46763fc16c61ee70b9c591c39957c7d64cdd39b0d578deeffe89b5784eff3054547aa7163ce48cbda9356822d8b73d41b3c97a7e39a8e83baea2709a5411180a1dfd430e3e7da19e6ec985097401d1e584cade644cfd5841450941e47882cb9a3f5f8d7ffb56b264b52f1150ed606e11faa38d2099a279334225e3e674748a31275c61ba2f426890a5d3688af1bf7ca428a98e4ac45e83519e9ebd1bd5a404ce328d241219694fbea7ceb83804572069324674463130a8cd57065a9ad5b94a02263c63a414b65ad7b2f0c0308b2445184d4cb5cad0113c2d5b243ac52af6cd318dcf3428e6246075d62114fcbc58c508535b83f98e0f4d8e971091562e2d2522ca4f02054fb35945f8c4c6eb6badc1eb59109b63919cad515302a07b32be9e18a9a8fb6e293dd847471de4a1c0296557045bc9cb46b3f7a547bdba3428b363c7059f6df4701c85bd42f81671b279d5aad5fd26c296f0005be5b9a3db7ccb57218a9148bd33f035d06ca83a965bc96308b49084da1b4bbf0c2c191211a4f3fedd8f99f4159672af4e0373470d795f4b0f59a601f0f5e378fa6d66f06c26c1216573316d333ebdf824246a9d5d14df10df3561008fe9c3f4306053a46f8e5a3c7ed163395d2f275ca519e28f783959a761114e852395f47a58e6639df3fe7bbdff459a0ac7cc8b2f8bbd7d1aa6e587a93309a57b3965ce744c92b9af337e727f143cad50d978fbca836a533f8179f365fae9e72380f39b852f578841b6786cd2715f4b57059fc6dbf4320bc3ca951216f4ae035dde36d5ad003c5d525382b8ae987c8df64f7bc06a5092737627b661a2c48a99dbb8e8b10616ea6e39409fcb6fe2fc5a5d9304264dbdf9598f19472e858bb3c1fe93cb67ef3cf2e9880004017d1843b122709c6b632b30c26c2379a137fbaf8a2cf88b6b6ac5c2b7f3f72d16c05b9b21b3012f860ae19976d5032e718b703cd003cebc3a5449fa63593397cd2e613434e9c3130a227fb4ad5378504c62af39adc5df859436d6cb791c85ba4386dd79d0c04519d5055d56ce6b2b4efa23951c2b600c750e52a3b6f9f694e3aa48667f9209888fd841d0c8ed2d50480dfdb8505a4c4cc0c0d7fffaf32aba110900e8be06cd37fac16fdc4a871a1f9570f8ecafc1901698022c5bb22f540191966cd2c1863f8ffa918871289a7723b7156958a832a2777d35ce41f6dc3b3a55a2d4647917e2f80ff1990dbfe500c636db835d4b6287afd2a8599d4ecfda7697f37191d27fd0d68eaacaab8b55b4550efde672c7a494611daf494f57c54272364c75623315cca4a18e3688ed63a6cb47b16cf5aab4ed07174d0c3c6794a8f528a54f8265e20c4aa5afe1417f7120c5c64a83d620715449ab4874deb51137c4731a00d4c7548dee055beec761c6819eb104fb48847215ff937d247924956a3ac302462590fb7ed395b36be5541a970c358949682316133a830c627d1e0cff5c0f36018e51e3492a0d64ae8555736f282e2e8d699d7f9ac79c373519e6417e7ed6937c6bc1023580e9b53725552111c4c42ef3cc944e4ea4a869e30367b34e632a7fc8a76b75c3924e604c41d1b706fc00733ddf8843dcbbb30c168b6d910f988932ee7ba95e4e69a51b056260e5322a136e8f3eef8427562b9ca11cc47dfe411a6a7cfed4fabf70cc95925174ef9fcd0be57afbb95faceb752bf67ef375545acab5e43376fcc1c61902b6797032ded8efc94567e6559e839753442a87bffe3a0ae3fd1a6ac32f509a8a4f5a3156e1423056fedf717bc9d78d71a6a4009dc5907c58bd62ccd3bd6252f8ec1c2a27fb3a7f6a196b2c546d2806b1951eb6b2fc9f09c7ba2ba5e878d522efe3381e6b4a942f5dc009c1bfd19b37ca6abce414c95193069c294a4cb21d1867f13e7615377423fad747408b10488d9827c75507545ee8382a9887d8a57b032f01c64d3ffe1f925294079c032b7823a980867eecde708ea5693d7c6e45b09c9191cc9e8426cefc8f3d60ab875a4a83903ba5ff58ed66a4dfe8b889ea233b41e7d8ffe53f3ca966e2ade1a2d3fb4ed25dfcd21320b3f54f5c2902daaa2a91e61bd069370dfadd3355c437d54e23cf683596baf232639e9a5fd3a7a0ebc3a95b6a8fad52badc0db63ea3217440b630b7baa093ae890bd3365c670d43b2b75225cf1011591ec99ca648c0e2d5184d2ebbec5f9ec6bcfaa760cb435a3dd25d0462aea2860d4e0d63c03d19065acc327ebd20b3ebac869f517cb6cc33067dbcefae965df86d284ee634e231475b05ababbfea1570d7c24802b1a7fcf225997b1683a4528e582c06222a20f63436f0a33d2815ff78822e50a1630333549677a83adb5c4d1d7e7f9fe0b223848687cceec181b26788c9ba2a9aaee184b555a5d60648297abbbc1cdced6f905585a5c5e5f6175a2b5dde2f0f2fc0000000000000000000000000000000000000000000000000000000000001119233342b02e330d200438ac6400095020304080109440001110e012008602c0020458802e2bb4fd062c950c00010204060901"

	if expectedSigMsg != strSignatureMessage {
		t.Errorf("signatureMessage mismatch\nExpected: %s\nFound: %s", expectedSigMsg, strSignatureMessage)
	}

	pk = d.GetPK()
	if !reflect.DeepEqual(Open(signatureMessage, &pk), msg) {
		t.Error("SignatureMessage Verification failed")
	}
}

func TestDilithium_Sign(t *testing.T) {
	msg := []uint8{0, 1, 2, 4, 6, 9, 1}

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	signature := d.Sign(msg)
	strSignature := hex.EncodeToString(signature)
	expectedSig := "b57514d3f7acf4c3b8db0d8df4cda335169c514a39e844bb2b2ec3303bae53bc5737cb1387a27053f04b826079f0106f51ec5cd1b7e9430103b0a1c0626b11f6a68d30611ee05192a00a09f28d1835e4d4c7a4bea8042cdbd39ae9c48a7ef2560eb5e108a9b2a3ee03150a03637984b5d6254a9810f226777d099247c1b9ba35a2b64a57447d111fa70cf0b92912f92ed4b0149fa7063dbbacb588ae53f22f280a373dde446ed51064b2fdecc2787e80a19f10e266c63a03ee35708ef091ba301fc40164c8221e5c2a89469e6d5e299742761c3dbac8dbe782e6c183e86f1672ac9b5c85b7f4443221f060c04c397e56efb0e17a1157bb6855766d8390871c8cbb9443245b80b8ec829aa1a1c01c5c09a14f4dbc93666fb612c3e9aac68734eec80849b5000d48fb33d8c310ad45ed68d65e8cd5099e99c921e4d1dda26d419ab90dc7b1af3f99c899433a10344890a02ce87a604e6ed7b88ee4231cbc762de85183c74afd35cc2b5f8a362a95a4afde497fe111d6b37048965512cf82a4dbae79a528c7060aa54a82c5c44f033e60bab973857338b84bf066576bb28aa4e4a90d5c12ad333e3cbf66daccb9d39d682a90c393324fdf0f712fea797763f0ca344a7c13f3386040e4c96c611773f685a641c2a330e89d2f5ff638b9899f9546ae49f6c472e0451b261d00dce9e30ff6bfd61bebd4e445306e5b5018f8f68857e41f2fe18118d843095af5e44c317b0131125d05c80d349b6928542d6c12d6adac2f11c40d07bdc2fc103d054cf30e09b52e9b220d526b2815dd54944e748a8e915d1eed798244f8efccdbd7db5410fb39cb18818bded6bb7f4c47fa477f7790d84429d1f8552a1ebd44c8d9140351ff33aca06c8367ef79ea5d0ed3fc7b46fe78540fea61aed4b4af4839fafcd02f0205a1a0a0e45322ad29b88d531f5be457215d9fa770dada54d9ed58a220dcd6aa18c6a3dd02e27d1e3d5ec573f50607fd830aaab9994fdf80728c6d605adf3c3b1185000ec7d01bcb86c2f1af6cb71e27b7ec481e2e607130d78c34f9bfacbdaa4da086169150fd50ded8a1af91b38fe52afac1f59baa522ac3f4066dd79bca4063dc266f81622dba159d828738fa66a2ba9323ac7f2ad897802ff576e4962ec132b3140243dc33012a5d57ac2f0d1b6e2c8549174ad5e8827f9b88461b43b78b39e9d820745ddf26e6bd461faa5def76ec4518637953a7a32f7a374f516066766734be6b7007f9a0b247512af2a209b6336f359f76d4e46763fc16c61ee70b9c591c39957c7d64cdd39b0d578deeffe89b5784eff3054547aa7163ce48cbda9356822d8b73d41b3c97a7e39a8e83baea2709a5411180a1dfd430e3e7da19e6ec985097401d1e584cade644cfd5841450941e47882cb9a3f5f8d7ffb56b264b52f1150ed606e11faa38d2099a279334225e3e674748a31275c61ba2f426890a5d3688af1bf7ca428a98e4ac45e83519e9ebd1bd5a404ce328d241219694fbea7ceb83804572069324674463130a8cd57065a9ad5b94a02263c63a414b65ad7b2f0c0308b2445184d4cb5cad0113c2d5b243ac52af6cd318dcf3428e6246075d62114fcbc58c508535b83f98e0f4d8e971091562e2d2522ca4f02054fb35945f8c4c6eb6badc1eb59109b63919cad515302a07b32be9e18a9a8fb6e293dd847471de4a1c0296557045bc9cb46b3f7a547bdba3428b363c7059f6df4701c85bd42f81671b279d5aad5fd26c296f0005be5b9a3db7ccb57218a9148bd33f035d06ca83a965bc96308b49084da1b4bbf0c2c191211a4f3fedd8f99f4159672af4e0373470d795f4b0f59a601f0f5e378fa6d66f06c26c1216573316d333ebdf824246a9d5d14df10df3561008fe9c3f4306053a46f8e5a3c7ed163395d2f275ca519e28f783959a761114e852395f47a58e6639df3fe7bbdff459a0ac7cc8b2f8bbd7d1aa6e587a93309a57b3965ce744c92b9af337e727f143cad50d978fbca836a533f8179f365fae9e72380f39b852f578841b6786cd2715f4b57059fc6dbf4320bc3ca951216f4ae035dde36d5ad003c5d525382b8ae987c8df64f7bc06a5092737627b661a2c48a99dbb8e8b10616ea6e39409fcb6fe2fc5a5d9304264dbdf9598f19472e858bb3c1fe93cb67ef3cf2e9880004017d1843b122709c6b632b30c26c2379a137fbaf8a2cf88b6b6ac5c2b7f3f72d16c05b9b21b3012f860ae19976d5032e718b703cd003cebc3a5449fa63593397cd2e613434e9c3130a227fb4ad5378504c62af39adc5df859436d6cb791c85ba4386dd79d0c04519d5055d56ce6b2b4efa23951c2b600c750e52a3b6f9f694e3aa48667f9209888fd841d0c8ed2d50480dfdb8505a4c4cc0c0d7fffaf32aba110900e8be06cd37fac16fdc4a871a1f9570f8ecafc1901698022c5bb22f540191966cd2c1863f8ffa918871289a7723b7156958a832a2777d35ce41f6dc3b3a55a2d4647917e2f80ff1990dbfe500c636db835d4b6287afd2a8599d4ecfda7697f37191d27fd0d68eaacaab8b55b4550efde672c7a494611daf494f57c54272364c75623315cca4a18e3688ed63a6cb47b16cf5aab4ed07174d0c3c6794a8f528a54f8265e20c4aa5afe1417f7120c5c64a83d620715449ab4874deb51137c4731a00d4c7548dee055beec761c6819eb104fb48847215ff937d247924956a3ac302462590fb7ed395b36be5541a970c358949682316133a830c627d1e0cff5c0f36018e51e3492a0d64ae8555736f282e2e8d699d7f9ac79c373519e6417e7ed6937c6bc1023580e9b53725552111c4c42ef3cc944e4ea4a869e30367b34e632a7fc8a76b75c3924e604c41d1b706fc00733ddf8843dcbbb30c168b6d910f988932ee7ba95e4e69a51b056260e5322a136e8f3eef8427562b9ca11cc47dfe411a6a7cfed4fabf70cc95925174ef9fcd0be57afbb95faceb752bf67ef375545acab5e43376fcc1c61902b6797032ded8efc94567e6559e839753442a87bffe3a0ae3fd1a6ac32f509a8a4f5a3156e1423056fedf717bc9d78d71a6a4009dc5907c58bd62ccd3bd6252f8ec1c2a27fb3a7f6a196b2c546d2806b1951eb6b2fc9f09c7ba2ba5e878d522efe3381e6b4a942f5dc009c1bfd19b37ca6abce414c95193069c294a4cb21d1867f13e7615377423fad747408b10488d9827c75507545ee8382a9887d8a57b032f01c64d3ffe1f925294079c032b7823a980867eecde708ea5693d7c6e45b09c9191cc9e8426cefc8f3d60ab875a4a83903ba5ff58ed66a4dfe8b889ea233b41e7d8ffe53f3ca966e2ade1a2d3fb4ed25dfcd21320b3f54f5c2902daaa2a91e61bd069370dfadd3355c437d54e23cf683596baf232639e9a5fd3a7a0ebc3a95b6a8fad52badc0db63ea3217440b630b7baa093ae890bd3365c670d43b2b75225cf1011591ec99ca648c0e2d5184d2ebbec5f9ec6bcfaa760cb435a3dd25d0462aea2860d4e0d63c03d19065acc327ebd20b3ebac869f517cb6cc33067dbcefae965df86d284ee634e231475b05ababbfea1570d7c24802b1a7fcf225997b1683a4528e582c06222a20f63436f0a33d2815ff78822e511192333420a1630333549677a83adb5c4d1d7e7f9fe0b223848687cceec181b26788c9ba2a9aaee184b555a5d60648297abbbc1cdced6f905585a5c5e5f6175a2b5dde2f0f2fcb02e330d200438ac6400095020304080109440001110e012008602c0020458802e2bb4fd062c950c"

	if expectedSig != strSignature {
		t.Errorf("signature mismatch\nExpected: %s\nFound: %s", expectedSig, strSignature)
	}
}

func TestDilithium_Verify(t *testing.T) {
	pk := PKHStrToBin(PK1)
	msg := []uint8{0, 1, 2, 4, 6, 9, 1}

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	signature := d.Sign(msg)
	strSignature := hex.EncodeToString(signature)
	expectedSig := "b57514d3f7acf4c3b8db0d8df4cda335169c514a39e844bb2b2ec3303bae53bc5737cb1387a27053f04b826079f0106f51ec5cd1b7e9430103b0a1c0626b11f6a68d30611ee05192a00a09f28d1835e4d4c7a4bea8042cdbd39ae9c48a7ef2560eb5e108a9b2a3ee03150a03637984b5d6254a9810f226777d099247c1b9ba35a2b64a57447d111fa70cf0b92912f92ed4b0149fa7063dbbacb588ae53f22f280a373dde446ed51064b2fdecc2787e80a19f10e266c63a03ee35708ef091ba301fc40164c8221e5c2a89469e6d5e299742761c3dbac8dbe782e6c183e86f1672ac9b5c85b7f4443221f060c04c397e56efb0e17a1157bb6855766d8390871c8cbb9443245b80b8ec829aa1a1c01c5c09a14f4dbc93666fb612c3e9aac68734eec80849b5000d48fb33d8c310ad45ed68d65e8cd5099e99c921e4d1dda26d419ab90dc7b1af3f99c899433a10344890a02ce87a604e6ed7b88ee4231cbc762de85183c74afd35cc2b5f8a362a95a4afde497fe111d6b37048965512cf82a4dbae79a528c7060aa54a82c5c44f033e60bab973857338b84bf066576bb28aa4e4a90d5c12ad333e3cbf66daccb9d39d682a90c393324fdf0f712fea797763f0ca344a7c13f3386040e4c96c611773f685a641c2a330e89d2f5ff638b9899f9546ae49f6c472e0451b261d00dce9e30ff6bfd61bebd4e445306e5b5018f8f68857e41f2fe18118d843095af5e44c317b0131125d05c80d349b6928542d6c12d6adac2f11c40d07bdc2fc103d054cf30e09b52e9b220d526b2815dd54944e748a8e915d1eed798244f8efccdbd7db5410fb39cb18818bded6bb7f4c47fa477f7790d84429d1f8552a1ebd44c8d9140351ff33aca06c8367ef79ea5d0ed3fc7b46fe78540fea61aed4b4af4839fafcd02f0205a1a0a0e45322ad29b88d531f5be457215d9fa770dada54d9ed58a220dcd6aa18c6a3dd02e27d1e3d5ec573f50607fd830aaab9994fdf80728c6d605adf3c3b1185000ec7d01bcb86c2f1af6cb71e27b7ec481e2e607130d78c34f9bfacbdaa4da086169150fd50ded8a1af91b38fe52afac1f59baa522ac3f4066dd79bca4063dc266f81622dba159d828738fa66a2ba9323ac7f2ad897802ff576e4962ec132b3140243dc33012a5d57ac2f0d1b6e2c8549174ad5e8827f9b88461b43b78b39e9d820745ddf26e6bd461faa5def76ec4518637953a7a32f7a374f516066766734be6b7007f9a0b247512af2a209b6336f359f76d4e46763fc16c61ee70b9c591c39957c7d64cdd39b0d578deeffe89b5784eff3054547aa7163ce48cbda9356822d8b73d41b3c97a7e39a8e83baea2709a5411180a1dfd430e3e7da19e6ec985097401d1e584cade644cfd5841450941e47882cb9a3f5f8d7ffb56b264b52f1150ed606e11faa38d2099a279334225e3e674748a31275c61ba2f426890a5d3688af1bf7ca428a98e4ac45e83519e9ebd1bd5a404ce328d241219694fbea7ceb83804572069324674463130a8cd57065a9ad5b94a02263c63a414b65ad7b2f0c0308b2445184d4cb5cad0113c2d5b243ac52af6cd318dcf3428e6246075d62114fcbc58c508535b83f98e0f4d8e971091562e2d2522ca4f02054fb35945f8c4c6eb6badc1eb59109b63919cad515302a07b32be9e18a9a8fb6e293dd847471de4a1c0296557045bc9cb46b3f7a547bdba3428b363c7059f6df4701c85bd42f81671b279d5aad5fd26c296f0005be5b9a3db7ccb57218a9148bd33f035d06ca83a965bc96308b49084da1b4bbf0c2c191211a4f3fedd8f99f4159672af4e0373470d795f4b0f59a601f0f5e378fa6d66f06c26c1216573316d333ebdf824246a9d5d14df10df3561008fe9c3f4306053a46f8e5a3c7ed163395d2f275ca519e28f783959a761114e852395f47a58e6639df3fe7bbdff459a0ac7cc8b2f8bbd7d1aa6e587a93309a57b3965ce744c92b9af337e727f143cad50d978fbca836a533f8179f365fae9e72380f39b852f578841b6786cd2715f4b57059fc6dbf4320bc3ca951216f4ae035dde36d5ad003c5d525382b8ae987c8df64f7bc06a5092737627b661a2c48a99dbb8e8b10616ea6e39409fcb6fe2fc5a5d9304264dbdf9598f19472e858bb3c1fe93cb67ef3cf2e9880004017d1843b122709c6b632b30c26c2379a137fbaf8a2cf88b6b6ac5c2b7f3f72d16c05b9b21b3012f860ae19976d5032e718b703cd003cebc3a5449fa63593397cd2e613434e9c3130a227fb4ad5378504c62af39adc5df859436d6cb791c85ba4386dd79d0c04519d5055d56ce6b2b4efa23951c2b600c750e52a3b6f9f694e3aa48667f9209888fd841d0c8ed2d50480dfdb8505a4c4cc0c0d7fffaf32aba110900e8be06cd37fac16fdc4a871a1f9570f8ecafc1901698022c5bb22f540191966cd2c1863f8ffa918871289a7723b7156958a832a2777d35ce41f6dc3b3a55a2d4647917e2f80ff1990dbfe500c636db835d4b6287afd2a8599d4ecfda7697f37191d27fd0d68eaacaab8b55b4550efde672c7a494611daf494f57c54272364c75623315cca4a18e3688ed63a6cb47b16cf5aab4ed07174d0c3c6794a8f528a54f8265e20c4aa5afe1417f7120c5c64a83d620715449ab4874deb51137c4731a00d4c7548dee055beec761c6819eb104fb48847215ff937d247924956a3ac302462590fb7ed395b36be5541a970c358949682316133a830c627d1e0cff5c0f36018e51e3492a0d64ae8555736f282e2e8d699d7f9ac79c373519e6417e7ed6937c6bc1023580e9b53725552111c4c42ef3cc944e4ea4a869e30367b34e632a7fc8a76b75c3924e604c41d1b706fc00733ddf8843dcbbb30c168b6d910f988932ee7ba95e4e69a51b056260e5322a136e8f3eef8427562b9ca11cc47dfe411a6a7cfed4fabf70cc95925174ef9fcd0be57afbb95faceb752bf67ef375545acab5e43376fcc1c61902b6797032ded8efc94567e6559e839753442a87bffe3a0ae3fd1a6ac32f509a8a4f5a3156e1423056fedf717bc9d78d71a6a4009dc5907c58bd62ccd3bd6252f8ec1c2a27fb3a7f6a196b2c546d2806b1951eb6b2fc9f09c7ba2ba5e878d522efe3381e6b4a942f5dc009c1bfd19b37ca6abce414c95193069c294a4cb21d1867f13e7615377423fad747408b10488d9827c75507545ee8382a9887d8a57b032f01c64d3ffe1f925294079c032b7823a980867eecde708ea5693d7c6e45b09c9191cc9e8426cefc8f3d60ab875a4a83903ba5ff58ed66a4dfe8b889ea233b41e7d8ffe53f3ca966e2ade1a2d3fb4ed25dfcd21320b3f54f5c2902daaa2a91e61bd069370dfadd3355c437d54e23cf683596baf232639e9a5fd3a7a0ebc3a95b6a8fad52badc0db63ea3217440b630b7baa093ae890bd3365c670d43b2b75225cf1011591ec99ca648c0e2d5184d2ebbec5f9ec6bcfaa760cb435a3dd25d0462aea2860d4e0d63c03d19065acc327ebd20b3ebac869f517cb6cc33067dbcefae965df86d284ee634e231475b05ababbfea1570d7c24802b1a7fcf225997b1683a4528e582c06222a20f63436f0a33d2815ff78822e511192333420a1630333549677a83adb5c4d1d7e7f9fe0b223848687cceec181b26788c9ba2a9aaee184b555a5d60648297abbbc1cdced6f905585a5c5e5f6175a2b5dde2f0f2fcb02e330d200438ac6400095020304080109440001110e012008602c0020458802e2bb4fd062c950c"

	if expectedSig != strSignature {
		t.Errorf("signature mismatch\nExpected: %s\nFound: %s", expectedSig, strSignature)
	}

	pk = d.GetPK()
	if !Verify(msg, signature, &pk) {
		t.Error("Signature Verification failed")
	}
}

func TestExtractMessage(t *testing.T) {
	msg := []uint8{0, 1, 2, 4, 6, 9, 1}

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	signatureMessage := d.Seal(msg)
	strSignatureMessage := hex.EncodeToString(signatureMessage)
	expectedSigMsg := "b57514d3f7acf4c3b8db0d8df4cda335169c514a39e844bb2b2ec3303bae53bc5737cb1387a27053f04b826079f0106f51ec5cd1b7e9430103b0a1c0626b11f6a68d30611ee05192a00a09f28d1835e4d4c7a4bea8042cdbd39ae9c48a7ef2560eb5e108a9b2a3ee03150a03637984b5d6254a9810f226777d099247c1b9ba35a2b64a57447d111fa70cf0b92912f92ed4b0149fa7063dbbacb588ae53f22f280a373dde446ed51064b2fdecc2787e80a19f10e266c63a03ee35708ef091ba301fc40164c8221e5c2a89469e6d5e299742761c3dbac8dbe782e6c183e86f1672ac9b5c85b7f4443221f060c04c397e56efb0e17a1157bb6855766d8390871c8cbb9443245b80b8ec829aa1a1c01c5c09a14f4dbc93666fb612c3e9aac68734eec80849b5000d48fb33d8c310ad45ed68d65e8cd5099e99c921e4d1dda26d419ab90dc7b1af3f99c899433a10344890a02ce87a604e6ed7b88ee4231cbc762de85183c74afd35cc2b5f8a362a95a4afde497fe111d6b37048965512cf82a4dbae79a528c7060aa54a82c5c44f033e60bab973857338b84bf066576bb28aa4e4a90d5c12ad333e3cbf66daccb9d39d682a90c393324fdf0f712fea797763f0ca344a7c13f3386040e4c96c611773f685a641c2a330e89d2f5ff638b9899f9546ae49f6c472e0451b261d00dce9e30ff6bfd61bebd4e445306e5b5018f8f68857e41f2fe18118d843095af5e44c317b0131125d05c80d349b6928542d6c12d6adac2f11c40d07bdc2fc103d054cf30e09b52e9b220d526b2815dd54944e748a8e915d1eed798244f8efccdbd7db5410fb39cb18818bded6bb7f4c47fa477f7790d84429d1f8552a1ebd44c8d9140351ff33aca06c8367ef79ea5d0ed3fc7b46fe78540fea61aed4b4af4839fafcd02f0205a1a0a0e45322ad29b88d531f5be457215d9fa770dada54d9ed58a220dcd6aa18c6a3dd02e27d1e3d5ec573f50607fd830aaab9994fdf80728c6d605adf3c3b1185000ec7d01bcb86c2f1af6cb71e27b7ec481e2e607130d78c34f9bfacbdaa4da086169150fd50ded8a1af91b38fe52afac1f59baa522ac3f4066dd79bca4063dc266f81622dba159d828738fa66a2ba9323ac7f2ad897802ff576e4962ec132b3140243dc33012a5d57ac2f0d1b6e2c8549174ad5e8827f9b88461b43b78b39e9d820745ddf26e6bd461faa5def76ec4518637953a7a32f7a374f516066766734be6b7007f9a0b247512af2a209b6336f359f76d4e46763fc16c61ee70b9c591c39957c7d64cdd39b0d578deeffe89b5784eff3054547aa7163ce48cbda9356822d8b73d41b3c97a7e39a8e83baea2709a5411180a1dfd430e3e7da19e6ec985097401d1e584cade644cfd5841450941e47882cb9a3f5f8d7ffb56b264b52f1150ed606e11faa38d2099a279334225e3e674748a31275c61ba2f426890a5d3688af1bf7ca428a98e4ac45e83519e9ebd1bd5a404ce328d241219694fbea7ceb83804572069324674463130a8cd57065a9ad5b94a02263c63a414b65ad7b2f0c0308b2445184d4cb5cad0113c2d5b243ac52af6cd318dcf3428e6246075d62114fcbc58c508535b83f98e0f4d8e971091562e2d2522ca4f02054fb35945f8c4c6eb6badc1eb59109b63919cad515302a07b32be9e18a9a8fb6e293dd847471de4a1c0296557045bc9cb46b3f7a547bdba3428b363c7059f6df4701c85bd42f81671b279d5aad5fd26c296f0005be5b9a3db7ccb57218a9148bd33f035d06ca83a965bc96308b49084da1b4bbf0c2c191211a4f3fedd8f99f4159672af4e0373470d795f4b0f59a601f0f5e378fa6d66f06c26c1216573316d333ebdf824246a9d5d14df10df3561008fe9c3f4306053a46f8e5a3c7ed163395d2f275ca519e28f783959a761114e852395f47a58e6639df3fe7bbdff459a0ac7cc8b2f8bbd7d1aa6e587a93309a57b3965ce744c92b9af337e727f143cad50d978fbca836a533f8179f365fae9e72380f39b852f578841b6786cd2715f4b57059fc6dbf4320bc3ca951216f4ae035dde36d5ad003c5d525382b8ae987c8df64f7bc06a5092737627b661a2c48a99dbb8e8b10616ea6e39409fcb6fe2fc5a5d9304264dbdf9598f19472e858bb3c1fe93cb67ef3cf2e9880004017d1843b122709c6b632b30c26c2379a137fbaf8a2cf88b6b6ac5c2b7f3f72d16c05b9b21b3012f860ae19976d5032e718b703cd003cebc3a5449fa63593397cd2e613434e9c3130a227fb4ad5378504c62af39adc5df859436d6cb791c85ba4386dd79d0c04519d5055d56ce6b2b4efa23951c2b600c750e52a3b6f9f694e3aa48667f9209888fd841d0c8ed2d50480dfdb8505a4c4cc0c0d7fffaf32aba110900e8be06cd37fac16fdc4a871a1f9570f8ecafc1901698022c5bb22f540191966cd2c1863f8ffa918871289a7723b7156958a832a2777d35ce41f6dc3b3a55a2d4647917e2f80ff1990dbfe500c636db835d4b6287afd2a8599d4ecfda7697f37191d27fd0d68eaacaab8b55b4550efde672c7a494611daf494f57c54272364c75623315cca4a18e3688ed63a6cb47b16cf5aab4ed07174d0c3c6794a8f528a54f8265e20c4aa5afe1417f7120c5c64a83d620715449ab4874deb51137c4731a00d4c7548dee055beec761c6819eb104fb48847215ff937d247924956a3ac302462590fb7ed395b36be5541a970c358949682316133a830c627d1e0cff5c0f36018e51e3492a0d64ae8555736f282e2e8d699d7f9ac79c373519e6417e7ed6937c6bc1023580e9b53725552111c4c42ef3cc944e4ea4a869e30367b34e632a7fc8a76b75c3924e604c41d1b706fc00733ddf8843dcbbb30c168b6d910f988932ee7ba95e4e69a51b056260e5322a136e8f3eef8427562b9ca11cc47dfe411a6a7cfed4fabf70cc95925174ef9fcd0be57afbb95faceb752bf67ef375545acab5e43376fcc1c61902b6797032ded8efc94567e6559e839753442a87bffe3a0ae3fd1a6ac32f509a8a4f5a3156e1423056fedf717bc9d78d71a6a4009dc5907c58bd62ccd3bd6252f8ec1c2a27fb3a7f6a196b2c546d2806b1951eb6b2fc9f09c7ba2ba5e878d522efe3381e6b4a942f5dc009c1bfd19b37ca6abce414c95193069c294a4cb21d1867f13e7615377423fad747408b10488d9827c75507545ee8382a9887d8a57b032f01c64d3ffe1f925294079c032b7823a980867eecde708ea5693d7c6e45b09c9191cc9e8426cefc8f3d60ab875a4a83903ba5ff58ed66a4dfe8b889ea233b41e7d8ffe53f3ca966e2ade1a2d3fb4ed25dfcd21320b3f54f5c2902daaa2a91e61bd069370dfadd3355c437d54e23cf683596baf232639e9a5fd3a7a0ebc3a95b6a8fad52badc0db63ea3217440b630b7baa093ae890bd3365c670d43b2b75225cf1011591ec99ca648c0e2d5184d2ebbec5f9ec6bcfaa760cb435a3dd25d0462aea2860d4e0d63c03d19065acc327ebd20b3ebac869f517cb6cc33067dbcefae965df86d284ee634e231475b05ababbfea1570d7c24802b1a7fcf225997b1683a4528e582c06222a20f63436f0a33d2815ff78822e50a1630333549677a83adb5c4d1d7e7f9fe0b223848687cceec181b26788c9ba2a9aaee184b555a5d60648297abbbc1cdced6f905585a5c5e5f6175a2b5dde2f0f2fc0000000000000000000000000000000000000000000000000000000000001119233342b02e330d200438ac6400095020304080109440001110e012008602c0020458802e2bb4fd062c950c00010204060901"

	if expectedSigMsg != strSignatureMessage {
		t.Errorf("signatureMessage mismatch\nExpected: %s\nFound: %s", expectedSigMsg, strSignatureMessage)
	}

	extractedMessage := ExtractMessage(signatureMessage)

	if !reflect.DeepEqual(msg, extractedMessage) {
		t.Error("ExtractedMessage mismatch")
	}
}

func TestExtractSignature(t *testing.T) {
	msg := []uint8{0, 1, 2, 4, 6, 9, 1}

	binUnsizeSeed, err := hex.DecodeString(HexSeed)
	if err != nil {
		t.Error("failed to decode hexseed ", err.Error())
	}
	var binSeed [common.SeedSize]uint8
	copy(binSeed[:], binUnsizeSeed)
	d := NewDilithiumFromSeed(binSeed)

	signatureMessage := d.Seal(msg)
	strSignatureMessage := hex.EncodeToString(signatureMessage)
	expectedSigMsg := "b57514d3f7acf4c3b8db0d8df4cda335169c514a39e844bb2b2ec3303bae53bc5737cb1387a27053f04b826079f0106f51ec5cd1b7e9430103b0a1c0626b11f6a68d30611ee05192a00a09f28d1835e4d4c7a4bea8042cdbd39ae9c48a7ef2560eb5e108a9b2a3ee03150a03637984b5d6254a9810f226777d099247c1b9ba35a2b64a57447d111fa70cf0b92912f92ed4b0149fa7063dbbacb588ae53f22f280a373dde446ed51064b2fdecc2787e80a19f10e266c63a03ee35708ef091ba301fc40164c8221e5c2a89469e6d5e299742761c3dbac8dbe782e6c183e86f1672ac9b5c85b7f4443221f060c04c397e56efb0e17a1157bb6855766d8390871c8cbb9443245b80b8ec829aa1a1c01c5c09a14f4dbc93666fb612c3e9aac68734eec80849b5000d48fb33d8c310ad45ed68d65e8cd5099e99c921e4d1dda26d419ab90dc7b1af3f99c899433a10344890a02ce87a604e6ed7b88ee4231cbc762de85183c74afd35cc2b5f8a362a95a4afde497fe111d6b37048965512cf82a4dbae79a528c7060aa54a82c5c44f033e60bab973857338b84bf066576bb28aa4e4a90d5c12ad333e3cbf66daccb9d39d682a90c393324fdf0f712fea797763f0ca344a7c13f3386040e4c96c611773f685a641c2a330e89d2f5ff638b9899f9546ae49f6c472e0451b261d00dce9e30ff6bfd61bebd4e445306e5b5018f8f68857e41f2fe18118d843095af5e44c317b0131125d05c80d349b6928542d6c12d6adac2f11c40d07bdc2fc103d054cf30e09b52e9b220d526b2815dd54944e748a8e915d1eed798244f8efccdbd7db5410fb39cb18818bded6bb7f4c47fa477f7790d84429d1f8552a1ebd44c8d9140351ff33aca06c8367ef79ea5d0ed3fc7b46fe78540fea61aed4b4af4839fafcd02f0205a1a0a0e45322ad29b88d531f5be457215d9fa770dada54d9ed58a220dcd6aa18c6a3dd02e27d1e3d5ec573f50607fd830aaab9994fdf80728c6d605adf3c3b1185000ec7d01bcb86c2f1af6cb71e27b7ec481e2e607130d78c34f9bfacbdaa4da086169150fd50ded8a1af91b38fe52afac1f59baa522ac3f4066dd79bca4063dc266f81622dba159d828738fa66a2ba9323ac7f2ad897802ff576e4962ec132b3140243dc33012a5d57ac2f0d1b6e2c8549174ad5e8827f9b88461b43b78b39e9d820745ddf26e6bd461faa5def76ec4518637953a7a32f7a374f516066766734be6b7007f9a0b247512af2a209b6336f359f76d4e46763fc16c61ee70b9c591c39957c7d64cdd39b0d578deeffe89b5784eff3054547aa7163ce48cbda9356822d8b73d41b3c97a7e39a8e83baea2709a5411180a1dfd430e3e7da19e6ec985097401d1e584cade644cfd5841450941e47882cb9a3f5f8d7ffb56b264b52f1150ed606e11faa38d2099a279334225e3e674748a31275c61ba2f426890a5d3688af1bf7ca428a98e4ac45e83519e9ebd1bd5a404ce328d241219694fbea7ceb83804572069324674463130a8cd57065a9ad5b94a02263c63a414b65ad7b2f0c0308b2445184d4cb5cad0113c2d5b243ac52af6cd318dcf3428e6246075d62114fcbc58c508535b83f98e0f4d8e971091562e2d2522ca4f02054fb35945f8c4c6eb6badc1eb59109b63919cad515302a07b32be9e18a9a8fb6e293dd847471de4a1c0296557045bc9cb46b3f7a547bdba3428b363c7059f6df4701c85bd42f81671b279d5aad5fd26c296f0005be5b9a3db7ccb57218a9148bd33f035d06ca83a965bc96308b49084da1b4bbf0c2c191211a4f3fedd8f99f4159672af4e0373470d795f4b0f59a601f0f5e378fa6d66f06c26c1216573316d333ebdf824246a9d5d14df10df3561008fe9c3f4306053a46f8e5a3c7ed163395d2f275ca519e28f783959a761114e852395f47a58e6639df3fe7bbdff459a0ac7cc8b2f8bbd7d1aa6e587a93309a57b3965ce744c92b9af337e727f143cad50d978fbca836a533f8179f365fae9e72380f39b852f578841b6786cd2715f4b57059fc6dbf4320bc3ca951216f4ae035dde36d5ad003c5d525382b8ae987c8df64f7bc06a5092737627b661a2c48a99dbb8e8b10616ea6e39409fcb6fe2fc5a5d9304264dbdf9598f19472e858bb3c1fe93cb67ef3cf2e9880004017d1843b122709c6b632b30c26c2379a137fbaf8a2cf88b6b6ac5c2b7f3f72d16c05b9b21b3012f860ae19976d5032e718b703cd003cebc3a5449fa63593397cd2e613434e9c3130a227fb4ad5378504c62af39adc5df859436d6cb791c85ba4386dd79d0c04519d5055d56ce6b2b4efa23951c2b600c750e52a3b6f9f694e3aa48667f9209888fd841d0c8ed2d50480dfdb8505a4c4cc0c0d7fffaf32aba110900e8be06cd37fac16fdc4a871a1f9570f8ecafc1901698022c5bb22f540191966cd2c1863f8ffa918871289a7723b7156958a832a2777d35ce41f6dc3b3a55a2d4647917e2f80ff1990dbfe500c636db835d4b6287afd2a8599d4ecfda7697f37191d27fd0d68eaacaab8b55b4550efde672c7a494611daf494f57c54272364c75623315cca4a18e3688ed63a6cb47b16cf5aab4ed07174d0c3c6794a8f528a54f8265e20c4aa5afe1417f7120c5c64a83d620715449ab4874deb51137c4731a00d4c7548dee055beec761c6819eb104fb48847215ff937d247924956a3ac302462590fb7ed395b36be5541a970c358949682316133a830c627d1e0cff5c0f36018e51e3492a0d64ae8555736f282e2e8d699d7f9ac79c373519e6417e7ed6937c6bc1023580e9b53725552111c4c42ef3cc944e4ea4a869e30367b34e632a7fc8a76b75c3924e604c41d1b706fc00733ddf8843dcbbb30c168b6d910f988932ee7ba95e4e69a51b056260e5322a136e8f3eef8427562b9ca11cc47dfe411a6a7cfed4fabf70cc95925174ef9fcd0be57afbb95faceb752bf67ef375545acab5e43376fcc1c61902b6797032ded8efc94567e6559e839753442a87bffe3a0ae3fd1a6ac32f509a8a4f5a3156e1423056fedf717bc9d78d71a6a4009dc5907c58bd62ccd3bd6252f8ec1c2a27fb3a7f6a196b2c546d2806b1951eb6b2fc9f09c7ba2ba5e878d522efe3381e6b4a942f5dc009c1bfd19b37ca6abce414c95193069c294a4cb21d1867f13e7615377423fad747408b10488d9827c75507545ee8382a9887d8a57b032f01c64d3ffe1f925294079c032b7823a980867eecde708ea5693d7c6e45b09c9191cc9e8426cefc8f3d60ab875a4a83903ba5ff58ed66a4dfe8b889ea233b41e7d8ffe53f3ca966e2ade1a2d3fb4ed25dfcd21320b3f54f5c2902daaa2a91e61bd069370dfadd3355c437d54e23cf683596baf232639e9a5fd3a7a0ebc3a95b6a8fad52badc0db63ea3217440b630b7baa093ae890bd3365c670d43b2b75225cf1011591ec99ca648c0e2d5184d2ebbec5f9ec6bcfaa760cb435a3dd25d0462aea2860d4e0d63c03d19065acc327ebd20b3ebac869f517cb6cc33067dbcefae965df86d284ee634e231475b05ababbfea1570d7c24802b1a7fcf225997b1683a4528e582c06222a20f63436f0a33d2815ff78822e50a1630333549677a83adb5c4d1d7e7f9fe0b223848687cceec181b26788c9ba2a9aaee184b555a5d60648297abbbc1cdced6f905585a5c5e5f6175a2b5dde2f0f2fc0000000000000000000000000000000000000000000000000000000000001119233342b02e330d200438ac6400095020304080109440001110e012008602c0020458802e2bb4fd062c950c00010204060901"

	if expectedSigMsg != strSignatureMessage {
		t.Errorf("signatureMessage mismatch\nExpected: %s\nFound: %s", expectedSigMsg, strSignatureMessage)
	}

	extractedSignature := ExtractSignature(signatureMessage)

	if !reflect.DeepEqual(signatureMessage[:SigSizePacked], extractedSignature) {
		t.Error("ExtractedSignature mismatch")
	}
}

func TestGetDilithiumAddressFromPK(t *testing.T) {
	pk := PKHStrToBin(PK1)

	expectedAddress := "200a82f6675005e1769c7728f25d1e2c5eb714f1"
	addressBin := GetDilithiumAddressFromPK(pk)
	address := hex.EncodeToString(addressBin[:])

	if !reflect.DeepEqual(address, expectedAddress) {
		t.Errorf("Address Mismatch\nExpected: %s\nFound: %s", expectedAddress, address)
	}
}

func TestIsValidDilithiumAddress(t *testing.T) {
	binAddress, err := hex.DecodeString(Address)
	if err != nil {
		t.Errorf("failed to decode address")
	}

	var sizedAddress [common.AddressSize]uint8
	copy(sizedAddress[:], binAddress)

	if !IsValidDilithiumAddress(sizedAddress) {
		t.Errorf("Invalid Dilithium Address")
	}
}
